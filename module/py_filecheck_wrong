#!/usr/bin/env python
#coding: utf-8
import subprocess
import json
import hashlib
import os

def GetFileMd5(module,ansible_facts_dict):
    if not os.path.isfile(module.params['filename']):
        module.exit_json(msg="%s noexist"%module.params['filename'], changed=False)
    else:       
        myhash = hashlib.md5()
        f = file(module.params['filename'],'rb')
        while True:
            b = f.read(8096)
            if not b :
                break
            myhash.update(b)
        f.close()
        md5value_new=myhash.hexdigest().lower()
        #module.exit_json(md5value=md5value_new, changed=False)        
        if ansible_facts_dict["ansible_facts"].has_key('ansible_md5value'):#自定义的fact可以写入/etc/ansible/facts.d/
            md5value_old=ansible_facts_dict["ansible_facts"]['ansible_md5value']
            if md5value_old==md5value_new:
                module.exit_json(msg="%s unmodified", changed=False)
            else:
                module.exit_json(msg="%s modified", changed=False)               
        else:
            #ansible_facts_dict["ansible_facts"]['ansible_%s_md5value'%module.params['filename']] =md5value_new
            module.exit_json(msg='fist register key ansible_%s_md5value'%module.params['filename'],ansible_facts=dict(ansible_md5value=md5value_new))
            
            

def main():
    module=AnsibleModule(
            argument_spec=dict(
                filename=dict(required=True),
            ),
            supports_check_mode=True
        )
    ansible_facts_dict = {
        "changed" : False,
        "ansible_facts": {
            }
    }        
    if module.check_mode:
        module.exit_json(changed=False)
    else:
        GetFileMd5(module,ansible_facts_dict)
            
from ansible.module_utils.basic import *
from ansible.module_utils.facts import *
if __name__=='__main__':
    main()